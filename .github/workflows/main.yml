name:  user-service-ci

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Create Secret
      run: |
        cat <<EOF > ${{ github.workspace }}/secrets.json
        {
            "PYTHON_SECRET_KEY": "${{ secrets.PYTHON_SECRET_KEY }}",
            "AWS_ACCESS_KEY_ID": "${{ secrets.AWS_ACCESS_KEY_ID }}",
            "AWS_SECRET_ACCESS_KEY": "${{ secrets.AWS_ACCESS_KEY_ID }}",
            "AWS_REGION": "${{ secrets.AWS_REGION }}",
            
            "DB_USER": "root",
            "DB_PASSWORD": "${{ secrets.DB_PASSWORD }}",
            "DB_HOST": "172.30.0.1",
            "DB_PORT": "3306"
        }
        EOF
    - name: Install Compose
      uses: ndeloof/install-docker-compose
    - name: Python service up for Test
      run: docker-compose -f docker-compose-test.yml up
    - name: Run Mysql Container
      uses: addnab/docker-run-action@v3
      with:
        image: mysql:5.7
        options: |
          -e MYSQL_ROOT_PASSWORD='${{ secrets.DB_PASSWORD }}' \
          -e MYSQL_DATABASE=user_service \
          --mount type=bind,source=${{ github.workspace }}/docker/mysql/default.cnf,target=/etc/mysql/conf.d/default.cnf \
          -p 3306:3306 \
          --network user_service_test_bridge
    - name: Sleep for Mysql Container
      run: sleep 30s
    - name: Run Tests
      run: |
        PYTHON_API_ID=`docker ps --filter name=user-api --format "{{.ID}}"`
        docker exec --workdir /usr/src $PYTHON_API_ID python manage.py test